{   "Arguments": {
        "noGUI": {
            "type": "bool",
            "help": "Use CONTINUITY script without interface and json user file",
            "default": false
        },
        "cluster": {
            "type": "bool",
            "help": "Run script in a cluster",
            "default": false
        },
        "ID": {
            "type": "str",
            "help": "Job name",
            "default": ""
        },
        "DWI_DATA": {
            "type": "str",
            "help": "DWI Image (.nrrd)",
            "default": ""
        },
        "DWI_DATA_bvecs": {
            "type": "str",
            "help": "DWI Image bvectors (in case of DWI in FSL format (.nii.gz)) ",
            "default": ""
        },
        "DWI_DATA_bvals": {
            "type": "str",
            "help": "DWI Image bvalues (in case of DWI in FSL format (.nii.gz))",
            "default": ""
        },
        "T1_DATA": {
            "type": "str",
            "help": "T1 (.nrrd)",
            "default": ""
        },
        "T2_DATA": {
            "type": "str",
            "help": "T2 (.nrrd)",
            "default": ""
        },
        "BRAINMASK": {
            "type": "str",
            "help": "Brain mask in DWI space (.nrrd)",
            "default": ""
        },
        "PARCELLATION_TABLE": {
            "type": "str",
            "help": "Parcellation table (.json)",
            "default": ""
        },
        "PARCELLATION_TABLE_NAME": {
            "type": "str",
            "help": "Parcellation table name",
            "default": ""
        },
        "labelSetName": {
            "type": "str",
            "help": "Labelset name in vtk surface file",
            "default": "label"
        },
        "WM_L_Surf": {
            "type": "str",
            "help": "Path to WM_L_Surf data",
            "default": ""
        },
        "WM_R_Surf": {
            "type": "str",
            "help": "Path to WM_R_Surf data",
            "default": ""
        },
        "SURFACE_USER": {
            "type": "str",
            "help": "Surface data (left and right white matter already combined)",
            "default": ""
        },
        "WM_L_Surf_NON_REGISTRATION": {
            "type": "str",
            "help": "Path to WM_L_Surf data in diffusion space",
            "default": ""
        },
        "WM_R_Surf_NON_REGISTRATION": {
            "type": "str",
            "help": "Path to WM_R_Surf data in diffusion space",
            "default": ""
        },
        "SALTDir": {
            "type": "str",
            "help": "Path to SALT directory",
            "default": ""
        },
        "labeled_image": {
            "type": "str",
            "help": "labeled_image",
            "default": ""
        },
        "KWMDir": {
            "type": "str",
            "help": "Set where the labels are stored with specific parcellation",
            "default": ""
        }
    },
    "Parameters": {
        
        "cluster_command_line": {
            "type": "str",
            "help": "Run script in a cluster with this specific command line",
            "default": "#!/bin/zsh \n#SBATCH -p general \n#SBATCH -N 1 \n#SBATCH --mem 32G \n#SBATCH -n 6 \n#SBATCH --time=10-00:00:00 \n#SBATCH --mail-type=end \n#SBATCH --mail-user=elodie@email.unc.edu \n" 
        },
        "tractography_model": {
            "type": "str",
            "help": "Tractography model: FSL, MRtrix or DIPY",
            "default": "FSL"
        },        
        "only_registration": {
            "type": "bool",
            "help": "Run only the registration part",
            "default": false
        },
        "only_bedpostx": {
            "type": "bool",
            "help": "Run only bedpostx (FSL)",
            "default": false
        },
        "run_bedpostx_gpu": {
            "type": "bool",
            "help": "Run bedpostx_gpu function (FSL)",
            "default": false
        },
        "run_probtrackx2_gpu": {
            "type": "bool",
            "help": "Run probtrackx2_gpu function (FSL)",
            "default": false
        },
        "filtering_with_tcksift": {
            "type": "bool",
            "help": "filtering_with_tcksift if Tractography model == MRtrix ",
            "default": false
        },
        "optimisation_with_tcksift2": {
            "type": "bool",
            "help": "Optimisation_with_tcksift2 if Tractography model == MRtrix",
            "default": true
        },
        "act_option": {
            "type": "bool",
            "help": "Use the Anatomically-Constrained Tractography framework during tracking",
            "default": false
        },
        "DO_REGISTRATION": {
            "type": "bool",
            "help": "Do registration with this tool",
            "default": true
        },
        "INTEGRATE_SC_DATA": {
            "type": "bool",
            "help": "Integrate subcortical data",
            "default": false
        },
        "INTEGRATE_SC_DATA_by_generated_sc_surf": {
            "type": "bool",
            "help": "Integrate subcortical data by generating subcortical surfaces",
            "default": false
        },
        "EXTRA_SURFACE_COLOR": {
            "type": "bool",
            "help": "Inner surface contains color labels",
            "default": true
        },
        "ignoreLabel": {
            "type": "str",
            "help": "Ignore a label",
            "default": ""
        },  
        "left_right_surface_need_to_be_combining": {
            "type": "bool",
            "help": "Boolean: left and right white surface provided separatly",
            "default": false
        },      
        "surface_already_labeled": {
            "type": "bool",
            "help": "Surfaces already labeled",
            "default": false
        },
        "subcorticals_region_names": { 
            "type": "list",
            "help": "List of subcortical regions names(name as in the parcellation table) (optional if 'subcortical' parameter in your parcellation table) ",
            "default": []
        }, 
        "subcorticals_region_labels": {
            "type": "list",
            "help": "List of subcortical label/number regions",
            "default": []
        },      
        "cortical_label_left": { 
            "type": "str",
            "help": "cortical_label_left",
            "default": "" 
        }, 
        "cortical_label_right": { 
            "type": "str",
            "help": "cortical_label_right",
            "default": "" 
        }, 
        "UPSAMPLING_DWI": {
            "type": "bool",
            "help": "Boolean for upsampling DWI data",
            "default": true
        },
        "first_fixed_img": {
            "type": "str",
            "help": "ANTs: fixed image of the first metric",
            "default": "FA_NRRD"
        },
        "first_moving_img": {
            "type": "str",
            "help": "ANTs: moving image of the first metric",
            "default": "T1_DATA"
        },
        "second_fixed_img": {
            "type": "str",
            "help": "ANTs: fixed image of the second metric",
            "default": "B0_BiasCorrect_NRRD"
        },
        "second_moving_img": {
            "type": "str",
            "help": "ANTs: moving image of the second metric",
            "default": "T2_DATA"
        },
        "first_metric_weight": {
            "type": "float",
            "help": "ANTs: The metric weight(s) for each stage",
            "default": 1
        },
        "first_radius": {
            "type": "float",
            "help": "ANTs: Radius of the region",
            "default": 4
        },
        "second_metric_weight": {
            "type": "float",
            "help": "ANTs: The metric weight(s) for each stage",
            "default": 2
        },
        "second_radius": {
            "type": "float",
            "help": "ANTs: Radius of the region",
            "default": 4
        },
        "deformation_field_sigma": {
            "type": "float",
            "help": "ANTs: Regularization: deformation field sigma",
            "default": 0.5
        },
        "gradient_field_sigma": {
            "type": "float",
            "help": "ANTs: Regularization: gradient field sigma",
            "default": 3
        },
        "SyN_param": {
            "type": "float",
            "help": "float: Transformation: SyN parameter",
            "default": 0.25
        },
        "iteration1": {
            "type": "int",
            "help": "ANTs: Transformation: number of iteration: first iteration",
            "default": 100
        },
        "iteration2": {
            "type": "int",
            "help": "ANTs: Transformation: number of iteration: second iteration",
            "default": 50
        },
        "iteration3": {
            "type": "int",
            "help": "ANTs: Transformation: number of iteration: third iteration",
            "default": 25
        },
        "nb_threads": {
            "type": "int",
            "help": "ANTs: number of threads",
            "default": 6
        },
        "nb_jobs_bedpostx_gpu": {
            "type": "int",
            "help": "Bedpostx_gpu: number of jobs to queue",
            "default": 4
        },
        "overlapping": {
            "type": "bool",
            "help": "Overlapping surfaces name",
            "default": true
        },
        "nb_fibers": {
            "type": "int",
            "help": "Bedpostx: number of fibers: 2",
            "default": 2
        },
        "nb_fiber_per_seed": {
            "type": "int",
            "help": "Tractography / Probtrackx2 options: P: Number of fibers per seed",
            "default": 100
        },
        "steplength": {
            "type": "float",
            "help": "Tractography / Probtrackx2 options: step length in mm",
            "default": 0.75
        },
        "sampvox": {
            "type": "float",
            "help": "Tractography / Probtrackx2 options: Sample random points within seed voxels",
            "default": 0.5
        },
        "loopcheck": {
            "type": "bool",
            "help": "Lookcheck",
            "default": true
        },
        "sx": { 
            "type": "float",
            "help": "SegProcessCLP param (generate SALT files): rescale: enforced spacing in x direction ",
            "default": 0.5
        }, 
        "sy": { 
            "type": "float",
            "help": "SegProcessCLP param (generate SALT files): rescale: enforced spacing in y direction ",
            "default": 0.5
        }, 
        "sz": { 
            "type": "float",
            "help": "SegProcessCLP param (generate SALT files): rescale: enforced spacing in z direction ",
            "default": 0.5
        }, 
        "nb_iteration_GenParaMeshCLP": {
            "type": "int",
            "help": "GenParaMeshCLP parameter: number of iteration",
            "default": 500
        },
        "spharmDegree": {
            "type": "int",
            "help": "ParaToSPHARMMeshCLP parameter: set the maximal degree for the SPHARM computation",
            "default": 10
        },
        "subdivLevel": {
            "type": "int",
            "help": "ParaToSPHARMMeshCLP parameter: set the subdivision level for the icosahedron subdivision",
            "default": 15
        },
        "json_config_file": {
            "type": "str",
            "help": "path for json user configuration file (save thanks to the interface) ",
            "default": ""
        },
        "list_bval_that_will_be_deleted": {
            "type": "list",
            "help": "List of bval that will be deleted in the DWI multi-shell",
            "default": []
        }, 


        
        "list_bval_that_will_be_used_for_the_tractography": {
            "type": "list",
            "help": "List of bval that will be used for the tractography",
            "default": []
        }, 
        "wm_fa_thr": { 
            "type": "float",
            "help": "DIPY param: wm_fa_thr",
            "default": 0.7
        }, 
        "gm_fa_thr": { 
            "type": "float",
            "help": "gm_fa_thr",
            "default": 0.3
        }, 
        "csf_fa_thr": { 
            "type": "float",
            "help": "csf_fa_thr",
            "default": 0.15
        }, 
        "gm_md_thr": { 
            "type": "float",
            "help": "gm_md_thr",
            "default": 0.001
        }, 
        "csf_md_thr": { 
            "type": "float",
            "help": "csf_md_thr",
            "default": 0.0032
        }, 
        "OUT_PATH": {
            "type": "str",
            "help": "Path to out folder",
            "default": ""
        }
    },
    "Executables": {
        "unu": {
            "type": "str",
            "help": "Path to Unu",
            "default": "required"
        },
        "N4BiasFieldCorrection": {
            "type": "str",
            "help": "Path to N4BiasFieldCorrection",
            "default": "required"
        },
        "BRAINSFit": {
            "type": "str",
            "help": "Path to BRAINSFit",
            "default": "required"
        },
        "dtiprocess": {
            "type": "str",
            "help": "Path to Dtiprocess",
            "default": "required"
        },
        "dtiestim": {
            "type": "str",
            "help": "Path to Dtiestim",
            "default": "required"
        },
        "ANTS": {
            "type": "str",
            "help": "Path to ANTS:",
            "default": "required"
        },
        "ITKTransformTools_v1": {
            "type": "str",
            "help": "Path to ITKTransformTools_v1.2.3",
            "default": "required"
        },
        "polydatatransform_v1": {
            "type": "str",
            "help": "Path to polydatatransform_v1.2.1",
            "default": "required"
        },
        "WarpImageMultiTransform": {
            "type": "str",
            "help": "Path to WarpImageMultiTransform",
            "default": "required"
        },
        "DWIConvert": {
            "type": "str",
            "help": "Path to DWIConvert",
            "default": "required"
        },
        "slicer": {
            "type": "str",
            "help": "Path to slicer",
            "default": "required"
        },
        "fsl": {
            "type": "str",
            "help": "Path to FSL",
            "default": "required"
        },
        "bedpostx_gpu": {
            "type": "str",
            "help": "Path to bedpostx_gpu",
            "default": ""
        },
        "probtrackx2_gpu": {
            "type": "str",
            "help": "Path to probtrackx2_gpu",
            "default": ""
        },
        "ExtractLabelSurfaces": {
            "type": "str",
            "help": "Path to ExtractLabelSurfaces",
            "default": "required"
        },
        "MRtrix": {
            "type": "str",
            "help": "Path to MRtrix",
            "default": "required"
        },
        "SegPostProcessCLP": {
            "type": "str",
            "help": "Path to SegPostProcessCLP",
            "default": "required"
        },
        "GenParaMeshCLP": {
            "type": "str",
            "help": "Path to GenParaMeshCLP",
            "default": "required"
        },
        "ParaToSPHARMMeshCLP": {
            "type": "str",
            "help": "Path to ParaToSPHARMMeshCLP",
            "default": "required"
        }
      
    },
    "View_Controllers": {
        "Red": {
            "type": "str",
            "help": "red param for view controllers in Slicer",
            "default": "B0"
        },
        "Yellow": {
            "type": "str",
            "help": "yellow param for view controllers in Slicer",
            "default": "B0"
        },
        "Green": {
            "type": "str",
            "help": "green param for view controllers in Slicer",
            "default": "B0"
        },
        "Slice4": {
            "type": "str",
            "help": "slice4 param for view controllers in Slicer",
            "default": "T1_registered"
        },
        "Slice5": {
            "type": "str",
            "help": "slice5 param for view controllers in Slicer",
            "default": "T1_registered"
        },
        "Slice6": {
            "type": "str",
            "help": "slice6 param for view controllers in Slicer",
            "default": "T1_registered"
        },
        "Slice7": {
            "type": "str",
            "help": "slice7 param for view controllers in Slicer",
            "default": "AD"
        },
        "Slice8": {
            "type": "str",
            "help": "slice8 param for view controllers in Slicer",
            "default": "AD"
        },
        "Slice9": {
            "type": "str",
            "help": "slice9 param for view controllers in Slicer",
            "default": "AD"
        }
    }
}
